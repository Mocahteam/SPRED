piece base, axle, blade_right, blade_left, nozzle;

#include "springdefs.h"

#define SIG_AIM1 2
#define SIG_MOVE 4

Create()
{
	set ARMORED to 1;
	while(get BUILD_PERCENT_LEFT) {
		move base to y-axis ([-16]*(get BUILD_PERCENT_LEFT)/100) now;
		turn axle to z-axis (<-90>*(get BUILD_PERCENT_LEFT)/100) now;
		sleep 60;
	}
	move base to y-axis 0 now;
	turn axle to z-axis 0 now;
	sleep 2500;
	set ARMORED to 0;
}

Killed(severity,corpsetype)
{
	hide blade_right;
	hide blade_left;
	explode blade_right type SHATTER;
	explode blade_left type SHATTER;
	return 0;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while(TRUE)
	{
		turn blade_right to y-axis <-40> speed <40>;
		turn blade_left to y-axis <40> speed <40>;
		wait-for-turn blade_right around y-axis;
		turn blade_right to y-axis <0> speed <40>;
		turn blade_left to y-axis <0> speed <40>;
		wait-for-turn blade_left around y-axis;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn blade_right to y-axis <-10> speed <20>;
	turn blade_left to y-axis <10> speed <20>;
}

QueryWeapon1(piecenum)
{
	piecenum=nozzle;
}

AimFromWeapon1(piecenum)
{
	piecenum=axle;
}

Restore()
{
	sleep 3000;
	turn axle to y-axis 0 speed <40>;
	turn nozzle to x-axis 0 now;
	wait-for-turn axle around y-axis;
}

AimWeapon1(h,p)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn axle to y-axis h speed <60>;
	turn nozzle to x-axis (0-p) now;
	wait-for-turn axle around y-axis;
	start-script Restore();
	return 1;
}

FireWeapon1()
{
	emit-sfx 1025 from nozzle;
}
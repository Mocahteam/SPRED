piece base, body, rotor, nozzle, tip;

#include "springdefs.h"
#define SIG_BUILD 8

Create()
{
	set ARMORED to 1;
	while(get BUILD_PERCENT_LEFT) {
		move base to y-axis ([-8]*(get BUILD_PERCENT_LEFT)/100) now;
		sleep 60;
	}
	move base to y-axis 0 now;
	spin body around y-axis speed <60>;
	set ACTIVATION to 1;
	sleep 5000;
	set ARMORED to 0;
}

Killed(severity,corpsetype)
{
	hide body;
	hide nozzle;
	explode body type SHATTER;
	explode nozzle type FALL;
}

QueryWeapon1(piecenum)
{
	piecenum=tip;
}

AimFromWeapon1(piecenum)
{
	piecenum=nozzle;
}

AimWeapon1(h,p)
{
	return 0;
}

StartBuilding(heading, pitch)
{
	signal SIG_BUILD;
	set-signal-mask SIG_BUILD;
	move nozzle to z-axis [8] speed [16];
	wait-for-move nozzle along z-axis;
	turn rotor to y-axis heading speed <120>;
	wait-for-turn rotor around y-axis;
	turn nozzle to x-axis (0-pitch) speed <120>;
	wait-for-turn nozzle around x-axis;
	set INBUILDSTANCE to 1;
	while (1) {
		emit-sfx 2048 from tip;
		sleep 60;
	}
}

StopBuilding()
{
	signal SIG_BUILD;
	set-signal-mask SIG_BUILD;
	set INBUILDSTANCE to 0;
	turn nozzle to x-axis 0 speed <120>;
	wait-for-turn nozzle around x-axis;
	turn rotor to y-axis 0 speed <120>;
	wait-for-turn rotor around y-axis;
	move nozzle to z-axis 0 speed [8];
	wait-for-move nozzle along z-axis;
}